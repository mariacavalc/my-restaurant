openapi: 3.0.0
info:
  title: Sistema de Gerenciamento de Pedidos de Restaurantes
  version: 1.0.0
paths:
  /clientes:
    get:
      tags:
        - Cliente
      summary: Retorna a lista de todos os clientes
      operationId: getClientes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClienteInfo'
    post:
      tags:
        - Cliente
      summary: Adiciona um novo cliente
      operationId: addCliente
      requestBody:
        description: Objeto cliente a ser adicionado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '201':
          description: Criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteInfo'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /clientes/{id}:
    get:
      tags:
        - Cliente
      summary: Retorna um cliente pelo seu ID
      operationId: getClienteById
      parameters:
        - name: id
          in: path
          description: ID do cliente a ser retornado
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteInfo'
        '404':
          description: Cliente não encontrado
    put:
      tags:
        - Cliente
      summary: Atualiza um cliente pelo seu ID
      operationId: updateClienteById
      parameters:
        - name: id
          in: path
          description: ID do cliente a ser atualizado
          required: true
          schema:
            type: integer
      requestBody:
        description: Objeto cliente a ser atualizado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteInfo'
        '404':
          description: Cliente não encontrado
    delete:
      tags:
        - Cliente
      summary: Remove um cliente pelo seu ID
      operationId: deleteClienteById
      parameters:
        - name: id
          in: path
          description: ID do cliente a ser removido
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Sem conteúdo
  /item:
    post:
      tags:
        - Item
      summary: Adiciona um novo item
      operationId: addItem
      requestBody:
        description: Objeto item a ser adicionado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemInfo'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
components:
  schemas:

    ClienteInfo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        nome:
          $ref: '#/components/schemas/nome'
        cpf:
          $ref: '#/components/schemas/cpf'
        email:
          $ref: '#/components/schemas/email'
        endereco:
          $ref: '#/components/schemas/endereco'
        dataNascimento:
          $ref: '#/components/schemas/dataNascimento'
        telefone:
          $ref: '#/components/schemas/telefone'

    Cliente:
      type: object
      properties:
        nome:
          $ref: '#/components/schemas/nome'
        cpf:
          $ref: '#/components/schemas/cpf'
        email:
          $ref: '#/components/schemas/email'
        endereco:
          $ref: '#/components/schemas/endereco'
        dataNascimento:
          $ref: '#/components/schemas/dataNascimento'
        telefone:
          $ref: '#/components/schemas/telefone'
      required:
        - nome
        - cpf
        - email
        - endereco
        - dataNascimento
        - telefone

    ItemInfo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        nome:
          $ref: '#/components/schemas/nome'
        descricao:
          $ref: '#/components/schemas/descricao'
        tipo:
          $ref: '#/components/schemas/tipo'
        valor:
          $ref: '#/components/schemas/valor'

    Item:
      type: object
      properties:
        nome:
          $ref: '#/components/schemas/nome'
        descricao:
          $ref: '#/components/schemas/descricao'
        tipo:
          $ref: '#/components/schemas/tipo'
        valor:
          $ref: '#/components/schemas/valor'
      required:
        - nome
        - descricao
        - tipo

    BadRequest:
      type: object
      properties:
        message:
          type: string
          example: CPF não tem um formato válido

    id:
      example: 1
      type: integer

    nome:
      example: João da Silva
      type: string

    cpf:
      example: 123.456.789-10
      type: string

    email:
      example: joao.silva@example.com
      type: string

    endereco:
      example: Rua das Flores, 1234
      type: string

    dataNascimento:
      example: 01/01/1980
      format: date
      type: string

    telefone:
      type: string
      example: (11) 98765-4321

    descricao:
      type: string
      example: Prato composto por dois pedaços de carne com arroz

    tipo:
      type: string
      example: Comida

    valor:
      type: number
      format: double
      example: 99.00